{"version":3,"sources":["serviceWorker.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","color0","color3","TimerTime","LeftDivStyle","float","width","height","marginRight","margin","padding","backgroundColor","boxShadow","RightDivStyle","color","borderRadius","buttonStyle","border","InputFormStyle","InputBoxStyle","resize","TimerInputStyle","TimerInputFormStyle","focusingStyle","TimerInput","props","h","m","s","NumChange","bind","Submit","event","target","placeholder","this","setState","parseInt","value","style","type","min","onChange","max","onClick","React","Component","InputForm","cols","onKeyPress","KeyPress","TodoItem","TodoItemStyle","RemoveTodoItem","index","MainBoard","doSomethingBeforeUnload","localStorage","removeItem","setItem","JSON","stringify","items","doingTime","setupBeforeUnloadListener","addEventListener","ev","preventDefault","CreateNewTodoItem","key","Newitems","NewDoingTime","slice","launchTodoItem","time","MainBoardTimer","mode","StopWatch","SwitchMod","StartDoing","ReceiveTime","getItem","parse","t","alert","Timer","StopTimer","clearInterval","undefined","setInterval","NewTime","Ticking","InputSecond","minutes","hours","days","second","LeftDiv","map","DisplayTime","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e615969.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nlet color0 = \"#465c70\"\nlet color1 = \"#607d92\"\nlet color2  = \"#869fb1\"\nlet color3 = \"#b8c7d7\"\n\nlet TimerTime = 0\nlet displayCondition = 0\n\nconst LeftDivStyle = {\n  float:\"left\",\n  width:\"200px\",\n  height: \"auto\",\n  marginRight: \"-400px\",\n  margin: \"10px 10px\",\n  padding: \"10px\",\n  backgroundColor: color3,\n  boxShadow: \"0px 0px 10px 3px \" + color3\n}\n\nconst RightDivStyle = {\n  color: color3,\n  float: \"right\",\n  width:\"300px\",\n  height: \"auto\",\n  backgroundColor: color0,\n  margin: \"10px 5px\",\n  padding: \"10px\",\n  borderRadius: \"3px\",\n  boxShadow: \"0px 0px 10px 3px \" + color0\n}\n\nconst buttonStyle = {\n  margin: \"0px 3px\",\n  backgroundColor: color1,\n  height: \"25px\",\n  width: \"auto\",\n  boxShadow: \"0 0px 6px 0px\" + color1,\n  border: \"0px\",\n  color: color3,\n  borderRadius: \"10px\"\n}\n\nconst InputFormStyle = {\n  margin: \"10px 5px\",\n  padding: \"10px\",\n  width: \"150px\",\n  borderRadius: \"3px\",\n  backgroundColor: color2,\n  color: color3,\n  boxShadow: \"0px 0px 10px 3px \" + color2\n  }\n\nconst InputBoxStyle = {\n  width: \"100%\",\n  height: \"25px\",\n  backgroundColor: color2,\n  border: \"0\",\n  borderRadius: \"3px\",\n  resize: \"none\", \n  color: \"block\"\n}\n\nconst TimerInputStyle = {\n  color: color0,\n  margin: \"10px 5px\",\n  padding: \"10px\",\n  width: \"auto\",\n  borderRadius: \"3px\",\n  backgroundColor: color2,\n}\n\nconst TimerInputFormStyle = {\n  width: \"30px\",\n  height: \"20px\",\n  backgroundColor: color0,\n  border: \"0\",\n  borderRadius: \"3px\",\n  resize: \"none\",\n  color: color2\n}\n\nconst focusingStyle = {\n  color: color3,\n  width:\"auto\",\n  height: \"auto\",\n  backgroundColor: color0,\n  margin: \"10px 5px\",\n  padding: \"10px\",\n  borderRadius: \"10px\",\n  boxShadow: \"0px 0px 10px 3px \" + color0\n}\n\nclass TimerInput extends React.Component{\n  state:{\n    h:0,\n    m:0,\n    s:0\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      h:0,\n      m:0,\n      s:0\n    }\n    this.NumChange = this.NumChange.bind(this)\n    this.Submit = this.Submit.bind(this)\n  }\n\n  NumChange(event){\n    if(event.target.placeholder === \"hours\"){\n      this.setState({\n        h: parseInt(event.target.value)\n      })\n    }\n    if(event.target.placeholder === \"minute\"){\n      this.setState({\n        m: parseInt(event.target.value)\n      })\n    }\n    if(event.target.placeholder === \"second\"){\n      this.setState({\n        s: parseInt(event.target.value)\n      })\n    }\n  }\n\n  Submit(){\n    this.props.Submit(this.state.h*60*60 + this.state.m*60 + this.state.s)\n  }\n\n  render(){\n    return(\n      <div style={TimerInputStyle}>\n      <input type=\"number\" value={this.state.h} placeholder=\"hours\" min=\"0\" onChange={this.NumChange} style={TimerInputFormStyle}/>&nbsp;時&nbsp;\n      <input type=\"number\" value={this.state.m} placeholder=\"minute\" max=\"59\" min=\"0\" onChange={this.NumChange} style={TimerInputFormStyle}/>&nbsp;分&nbsp; \n      <input type=\"number\" value={this.state.s} placeholder=\"second\" max=\"59\" min=\"0\" onChange={this.NumChange} style={TimerInputFormStyle}/>&nbsp;秒&nbsp;&nbsp;&nbsp;\n      <button type=\"button\" style={buttonStyle} onClick={this.Submit}>Start Timer</button>\n      </div>\n    )\n  }\n}\n/*\nclass Clock extends React.Component{\n\n  state:{\n    time: \"\",\n    Timer: null\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      time: new Date().toLocaleTimeString()\n    }\n  }\n\n  componentDidMount(){\n    const Tick = () => {\n      this.setState({\n        time: new Date().toLocaleTimeString()\n      })\n    }\n    this.setState({\n      Timer: setInterval(Tick,1000)\n    }) \n  }\n\n  componentWillUnmount(){\n    clearInterval(this.state.Timer)\n    this.setState({\n      Timer: null\n    })\n  }\n\n  render(){\n    return(\n      <h1>{this.state.time}</h1>\n    )\n  }\n}\n*/\nconst InputForm =(props)=>{\n\n  const Press = (event) =>{\n    props.KeyPress(event)\n  }\n  return <div style={InputFormStyle}><textarea cols=\"100\" onKeyPress={Press} style={InputBoxStyle} placeholder=\"請輸入任務名稱\"/></div>\n}\n\nconst TodoItem = (props) => {\n  const TodoItemStyle = {\n    color: color3,\n    margin: \"20px 5px\",\n    padding: \"10px\",\n    width: \"150px\",\n    borderRadius: \"3px 3px\",\n    backgroundColor: color0,\n    boxShadow: \"0px 0px 10px 3px \" + color0\n  }\n  const Click = () => {\n    props.RemoveTodoItem(props.index)\n  }\n  return (\n    <div onClick={Click} style={TodoItemStyle}>{props.value} </div>\n    )\n} \n\nclass MainBoard extends React.Component{\n  state: {\n    time: 0,\n    items: [],\n    doingTime: [],\n    target: null,\n    MainBoardTimer: null,\n    mode: \"\"\n  }\n  constructor(props){\n    super(props)\n    this.state = {\n      time: 0,\n      items: [],\n      doingTime: [],\n      target: null,\n      MainBoardTimer: null,\n      mode: \"StopWatch\"\n    }\n    this.StopWatch = this.StopWatch.bind(this)\n    this.SwitchMod = this.SwitchMod.bind(this)\n    this.StartDoing = this.StartDoing.bind(this)\n    this.ReceiveTime = this.ReceiveTime.bind(this)\n  }\n\n  doSomethingBeforeUnload = () => {\n    localStorage.removeItem('items')\n    localStorage.removeItem('doingTime')\n    localStorage.setItem(\"items\",JSON.stringify(this.state.items))\n    localStorage.setItem('doingTime',JSON.stringify(this.state.doingTime))\n  }\n\n  setupBeforeUnloadListener = () => {\n  window.addEventListener(\"beforeunload\", (ev) => {\n      ev.preventDefault()\n      return this.doSomethingBeforeUnload()\n  })\n  }\n\n  componentDidMount(){\n    this.setupBeforeUnloadListener();\n    if(localStorage.getItem('items') != null && localStorage.getItem('doingTime') != null){\n      this.setState({\n        items: JSON.parse(localStorage.getItem('items')),\n        doingTime: JSON.parse(localStorage.getItem('doingTime'))\n      })\n    }\n  }\n\n  ReceiveTime(t){\n    if(t === \"NaN\"){\n      alert(\"請輸入正確內容\")\n      t = 0\n    }\n    this.setState({\n      time: t\n    })\n    this.StartDoing()\n  }\n\n  CreateNewTodoItem =(event)=>{\n    if(event.key === 'Enter'){\n    const Newitems = [...this.state.items, event.target.value]\n    const NewDoingTime = [...this.state.doingTime, 0]\n    this.setState({\n      items: Newitems,\n      doingTime: NewDoingTime\n    }) \n    event.target.value = \"\"\n    }\n  }\n\n  RemoveTodoItem =()=>{\n    let index = this.state.target\n    const Newitems = [...this.state.items.slice(0,index),...this.state.items.slice(index+1)]\n    const NewDoingTime = [...this.state.doingTime.slice(0,index),...this.state.doingTime.slice(index+1)]\n    this.setState({\n      items: Newitems,\n      doingTime: NewDoingTime,\n      target: null\n    })\n  }\n\n  launchTodoItem =(index)=>{\n    this.setState({\n      target: index\n    })\n  }\n\n  SwitchMod(){\n    if(this.state.mode === \"StopWatch\"){\n      this.setState({\n        mode: \"Timer\"\n      })\n    }else{\n      this.setState({\n        mode: \"StopWatch\"\n      })\n    }\n  }\n\n  StartDoing(){\n    if(this.state.mode === \"StopWatch\"){\n      this.StopWatch()\n    }else{\n      this.Timer()\n    }\n  }\n\n  Timer(){\n    const StopTimer = () =>{\n      clearInterval(this.state.MainBoardTimer)\n        this.setState({\n          MainBoardTimer: null\n        })\n        let index = this.state.target\n        let NewDoingTime = this.state.doingTime\n        NewDoingTime[index] = TimerTime\n        this.setState({\n          doingTime: NewDoingTime,\n          time: 0\n        })\n    }\n    const Ticking = () => {\n      if(this.state.time > 0){\n      this.setState({\n        time: this.state.time - 1\n      })\n      TimerTime += 1\n    }\n      else{\n        StopTimer()\n      }\n    }\n    if(this.state.MainBoardTimer === null || this.state.MainBoardTimer === undefined){\n      this.setState({\n        MainBoardTimer: setInterval(function(){Ticking()},1000)\n      }) \n    }\n      else{\n        StopTimer()\n      }\n  }\n\n  StopWatch(){\n    const Ticking =()=>{\n        const NewTime = this.state.time + 1\n        this.setState({time: NewTime})\n    }\n    if(this.state.MainBoardTimer === null || this.state.MainBoardTimer === undefined){\n    this.setState({\n      MainBoardTimer: setInterval(function(){Ticking()},1000)\n    }) \n  }\n    else{\n      clearInterval(this.state.MainBoardTimer)\n      this.setState({\n        MainBoardTimer: null\n      })\n      let index = this.state.target\n      let NewDoingTime = this.state.doingTime\n      NewDoingTime[index] = this.state.time\n      this.setState({\n        doingTime: NewDoingTime,\n        time: 0\n      })\n    }\n  }\n\n  DisplayTime(InputSecond){\n    let minutes = parseInt(InputSecond/60)\n    let hours = parseInt(minutes/60)\n    let days = parseInt(hours/24)\n    let second = InputSecond - parseInt(InputSecond/60)*60\n    minutes -= hours*60\n    hours -= days*24\n    if(days > 0){\n      return days + \"天\" + hours + \"小時\" + minutes + \"分\" + second + \"秒\"\n    }\n    if(hours > 0){\n      return hours + \"小時\" + minutes + \"分\" + second + \"秒\"\n    }\n    if(minutes > 0){\n      return minutes + \"分\" + second + \"秒\"\n    }\n    else{\n      return second + \"秒\"\n    }\n  }\n\n  render(){\n    if(this.state.MainBoardTimer === null){\n      if(this.state.target === null){\n          displayCondition = 0\n        }else{\n          if(this.state.mode === \"StopWatch\"){\n          displayCondition = 1\n        }\n        else{\n          displayCondition = 2\n        }\n      }\n    }else{\n      if(this.state.mode === \"Timer\"){\n          displayCondition = 3\n      }\n      else{\n          displayCondition = 4\n      }\n    }\n\n    const LeftDiv = () => { return(<div style={LeftDivStyle}>\n      <InputForm KeyPress={this.CreateNewTodoItem} />\n      <div>{this.state.items.map((value,index)=><TodoItem value={value} index={index} target={this.state.target} key={index} RemoveTodoItem={this.launchTodoItem}/>)}</div>\n      </div>)}\n\n  switch(displayCondition){\n    default:\n      case 0:\n          return(\n              <div>\n                <LeftDiv/>\n                <div style={RightDivStyle}>\n                <h1>想做什麼?</h1>\n                <p>在左側新增或選擇任務</p>\n                </div>\n              </div>\n          )\n      case 1:\n          return (\n              <div>\n                <LeftDiv/>\n                <div style={RightDivStyle}>\n                <h1>{this.state.items[this.state.target]} </h1>\n                <p>已投入 {this.DisplayTime(this.state.doingTime[this.state.target])}</p>\n                <button type=\"button\" style={buttonStyle} onClick={this.StartDoing}>Start StopWatch</button>\n                <button type=\"button\" style={buttonStyle} onClick={this.SwitchMod}>Switch to Timer</button>\n                <button type=\"button\" style={buttonStyle} onClick={this.RemoveTodoItem}>delete</button>\n                </div>\n              </div>\n            )\n      case 2:\n          return (\n              <div>\n                <LeftDiv/>\n                <div style={RightDivStyle}>\n                <h1>{this.state.items[this.state.target]} </h1>\n                <p>已投入 {this.DisplayTime(this.state.doingTime[this.state.target])}</p>\n                  <TimerInput Submit={this.ReceiveTime}/>\n                  <button type=\"button\" style={buttonStyle} onClick={this.SwitchMod}>Switch to StopWatch</button>\n                  <button type=\"button\" style={buttonStyle} onClick={this.RemoveTodoItem}>delete</button>\n                </div>\n              </div>\n            )\n      case 3:\n          return(\n            <div style={focusingStyle}> \n            <h1>專注...</h1>\n              <p>現在在做的是 {this.state.items[this.state.target]}.</p>\n              <p>你還剩下{this.DisplayTime(this.state.time)}</p>\n              <button type=\"button\" style={buttonStyle} onClick={this.StartDoing}>leave</button>\n          </div>\n            )\n      case 4:\n          return(\n            <div style={focusingStyle}>\n              <h1>專注...</h1>\n              <p>現在在做的是 {this.state.items[this.state.target]}</p>\n              <p>你已經專注了 {this.DisplayTime(this.state.time)}</p>\n              <button type=\"button\" style={buttonStyle} onClick={this.StartDoing}>leave</button>\n          </div>\n\n            )\n    }\n  }\n}\n\nReactDOM.render(\n  <div>\n    <MainBoard/>\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}